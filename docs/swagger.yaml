basePath: /api
definitions:
  advert_api.AdvertResponse:
    properties:
      href:
        description: 跳转连接
        type: string
      images:
        description: 图片
        type: string
      is_show:
        description: 是否展示
        type: boolean
      title:
        description: 显示的标题
        type: string
    required:
    - href
    - images
    - title
    type: object
  config.Email:
    properties:
      authorization_code:
        description: 授权码
        type: string
      default_from_email:
        description: 默认发件人名字
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: integer
      user:
        description: 发件人邮箱
        type: string
      user_ssl:
        description: 是否使用ssl
        type: boolean
      user_tls:
        description: 是否使用tls
        type: boolean
    type: object
  config.SiteInfo:
    properties:
      addr:
        type: string
      bei_an:
        type: string
      bilibili_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      gitee_url:
        type: string
      github_urt:
        type: string
      job:
        type: string
      name:
        type: string
      qq_image:
        type: string
      slogan:
        type: string
      slogan_en:
        type: string
      title:
        type: string
      version:
        type: string
      web:
        type: string
      wechat_image:
        type: string
    type: object
  ctype.ImageType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-comments:
      Aliyun: 阿里云
      Local: 本地
    x-enum-varnames:
    - Local
    - Aliyun
  ctype.Role:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      PermissionAdmin: 管理员
      PermissionDisableUser: 被禁用的用户
      PermissionUser: 普通登录用户
      PermissionVisitor: 游客
    x-enum-varnames:
    - PermissionAdmin
    - PermissionUser
    - PermissionVisitor
    - PermissionDisableUser
  ctype.SignStatus:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      SignEmail: 邮箱
      SignGitee: gitee
      SignQQ: QQ
    x-enum-varnames:
    - SignQQ
    - SignGitee
    - SignEmail
  images_api.BannerResponse:
    properties:
      id:
        description: 图片id
        type: integer
      name:
        description: 图片名称
        type: string
      path:
        description: 图片路径
        type: string
    type: object
  images_api.UpdateNameResponse:
    properties:
      id:
        type: integer
      name:
        maxLength: 256
        type: string
    required:
    - id
    - name
    type: object
  menu_api.ImageSort:
    properties:
      image_id:
        description: 图片id
        type: integer
      sort:
        description: 图片排序，例如2 其他图片可以是1 3
        type: integer
    type: object
  menu_api.MenuImage:
    properties:
      id:
        type: integer
      path:
        type: string
    type: object
  menu_api.MenuRequest:
    properties:
      abstract:
        description: 简介
        items:
          type: string
        type: array
      abstract_time:
        description: 简介的切换时间
        type: integer
      banner_time:
        description: 菜单图片的切换时间
        type: integer
      image_sort_list:
        description: 具体图片的循序
        items:
          $ref: '#/definitions/menu_api.ImageSort'
        type: array
      menu_title:
        description: 菜单标题
        type: string
      menu_title_en:
        description: 英文菜单标题
        type: string
      slogan:
        description: 广告
        type: string
      sort:
        description: 菜单列表排序
        type: integer
    type: object
  menu_api.MenuResponse:
    properties:
      abstract:
        description: 简介
        items:
          type: string
        type: array
      abstract_time:
        description: 简介的切换时间
        type: integer
      banner_time:
        description: 菜单图片的切换时间
        type: integer
      created_at:
        description: 创建时间
        type: string
      id:
        description: 主键id
        type: integer
      menu_title:
        description: 菜单标题
        type: string
      menu_title_en:
        description: 英文菜单标题
        type: string
      menuImages:
        items:
          $ref: '#/definitions/menu_api.MenuImage'
        type: array
      slogan:
        description: 广告
        type: string
      sort:
        description: 菜单的循序
        type: integer
    type: object
  models.AdvertModel:
    properties:
      created_at:
        description: 创建时间
        type: string
      href:
        description: 跳转连接
        type: string
      id:
        description: 主键id
        type: integer
      images:
        description: 图片
        type: string
      is_show:
        description: 是否展示
        type: boolean
      title:
        description: 显示的标题
        type: string
    type: object
  models.BannerModel:
    properties:
      created_at:
        description: 创建时间
        type: string
      hash:
        description: 图片的hash值，用于判断重复的图片
        type: string
      id:
        description: 主键id
        type: integer
      image_type:
        allOf:
        - $ref: '#/definitions/ctype.ImageType'
        description: 图片的类型，本地还是阿里云
      name:
        description: 图片名称
        type: string
      path:
        description: 图片路径
        type: string
    type: object
  models.RemoveRequest:
    properties:
      id_list:
        items:
          type: integer
        type: array
    type: object
  models.UserModel:
    properties:
      addr:
        description: 地址
        type: string
      avatar:
        description: 头像id
        type: string
      created_at:
        description: 创建时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 主键id
        type: integer
      ip:
        description: ip地址
        type: string
      nick_name:
        description: 昵称
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 用户权限
      sign_status:
        allOf:
        - $ref: '#/definitions/ctype.SignStatus'
        description: 用户登录方式
      tel:
        description: 手机
        type: string
      token:
        description: 其他平台唯一id
        type: string
      user_name:
        description: 用户名
        type: string
    type: object
  res.FileUploadResponse:
    properties:
      file_name:
        type: string
      is_success:
        type: boolean
      msg:
        type: string
      url:
        type: string
    type: object
  res.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  user_api.BindMailRequest:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - email
    type: object
  user_api.LoginRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    required:
    - password
    - user_name
    type: object
  user_api.RegisterRequest:
    properties:
      code:
        type: string
      email:
        type: string
      nick_name:
        type: string
      password:
        type: string
      re_password:
        type: string
      user_name:
        type: string
    required:
    - email
    - nick_name
    - password
    - re_password
    - user_name
    type: object
  user_api.UserUpdatePwdRequest:
    properties:
      new_password:
        type: string
      password:
        type: string
      re_password:
        type: string
      user_id:
        type: integer
    required:
    - new_password
    - password
    - re_password
    - user_id
    type: object
  user_api.UserUpdateRoleRequest:
    properties:
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        enum:
        - 1
        - 2
        - 3
        - 4
      user_id:
        type: integer
    required:
    - role
    - user_id
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: gin_vue_blog 程序api
  title: gin_blog API
  version: "1.0"
paths:
  /advert:
    get:
      description: 广告列表
      parameters:
      - in: query
        name: key
        type: string
      - description: 每页的页数
        in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.AdvertModel'
                  type: array
              type: object
      summary: 广告列表
      tags:
      - 广告管理
    post:
      description: 创建广告
      parameters:
      - description: 表示多个参数
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/advert_api.AdvertResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建广告
      tags:
      - 广告管理
  /advert/{id}:
    put:
      description: 更新广告
      parameters:
      - description: URL 参数 ：id
        in: path
        name: id
        required: true
        type: string
      - description: 创建广告的示例
        in: body
        name: cr
        schema:
          $ref: '#/definitions/advert_api.AdvertResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新广告
      tags:
      - 广告管理
  /email_login:
    post:
      description: 邮箱登录
      parameters:
      - description: '用户 密码 '
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 邮箱登录
      tags:
      - 用户管理
  /image_names:
    get:
      description: 图片名字列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/images_api.BannerResponse'
                  type: array
              type: object
      summary: 图片名字列表
      tags:
      - 图片管理
  /images:
    delete:
      description: 删除图片
      parameters:
      - description: 要删除的图片id列表
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除图片
      tags:
      - 图片管理
    get:
      description: 图片列表
      parameters:
      - in: query
        name: key
        type: string
      - description: 每页的页数
        in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.BannerModel'
                  type: array
              type: object
      summary: 图片列表
      tags:
      - 图片管理
    post:
      description: 创建图片
      parameters:
      - description: 上传的文件
        in: formData
        name: images
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/res.FileUploadResponse'
                  type: array
              type: object
      summary: 创建图片
      tags:
      - 图片管理
    put:
      description: 修改图片
      parameters:
      - description: 要更新的图片id和name
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/images_api.UpdateNameResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改图片
      tags:
      - 图片管理
  /menu:
    get:
      description: 菜单列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu_api.MenuResponse'
                  type: array
              type: object
      summary: 菜单列表
      tags:
      - 菜单管理
    post:
      description: 菜单创建
      parameters:
      - description: 菜单表的参数和关联图片表参数
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 菜单创建
      tags:
      - 菜单管理
  /menu/{id}:
    put:
      description: 修改菜单api
      parameters:
      - description: 要更新的菜单参数
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      - description: 要更新的菜单id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改菜单
      tags:
      - 菜单管理
  /settings:
    get:
      description: 系统信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/config.SiteInfo'
              type: object
      summary: 系统信息
      tags:
      - 系统设置
    put:
      description: 修改配置文件信息api
      parameters:
      - description: 要更新系统信息参数
        in: body
        name: siteInfo
        required: true
        schema:
          $ref: '#/definitions/config.SiteInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改配置文件信息api
      tags:
      - 系统设置
  /settings_email:
    get:
      description: 邮箱
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/config.Email'
              type: object
      summary: 邮箱
      tags:
      - 系统设置
    put:
      description: 修改邮箱信息api
      parameters:
      - description: 要更新邮箱信息参数
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/config.Email'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改邮箱信息api
      tags:
      - 系统设置
  /user_bind_email:
    post:
      description: 用户绑定邮箱
      parameters:
      - description: 用户绑定邮箱，第一次输入邮箱接收验证码，第二次输入验证码和密码（更新密码）
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.BindMailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户绑定邮箱
      tags:
      - 用户管理
  /user_delete:
    delete:
      description: 批量删除用户
      parameters:
      - description: 要删除的用户id列表
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 批量删除用户
      tags:
      - 用户管理
  /user_logout:
    get:
      description: 用户注销
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户注销
      tags:
      - 用户管理
  /user_register:
    post:
      description: 邮箱或者用户名注册
      parameters:
      - description: '注册信息 '
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 邮箱或者用户名注册
      tags:
      - 用户管理
  /user_update_pwd:
    put:
      description: 用户密码修改
      parameters:
      - description: 用户密码修改
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.UserUpdatePwdRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户密码修改
      tags:
      - 用户管理
  /user_update_role:
    put:
      description: 用户权限修改
      parameters:
      - description: 用户权限修改
        in: body
        name: cr
        required: true
        schema:
          $ref: '#/definitions/user_api.UserUpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户权限修改
      tags:
      - 用户管理
  /users:
    get:
      description: 用户list
      parameters:
      - in: query
        name: key
        type: string
      - description: 每页的页数
        in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.UserModel'
                  type: array
              type: object
      summary: 用户list
      tags:
      - 用户管理
swagger: "2.0"
